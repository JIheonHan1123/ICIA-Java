package a_Jan_30;

import java.util.Date;

public class Ex3_Memory {
	public static void main(String[] args) {
		// 기본형 변수 vs 참조형 변수 개념 복습

//		자바프로그램이 실행되면 사용하는 메모리가 있음
//		자바는 영역을 크게 stack영역과 heap영역으로 나눈다.

		// stack: 자바가 관리 (변수를 문법에 따라 만들고 파괴 = 중괄호 열면 만들고 닫으면 파괴)
		// = automatic(자동)
		// 정적인 영역 (사용범위가 정해져있다 -> 변수의 사용범위는 정적이다)
		// 기본타입변수, 참조타입변수가 만들어진다
		{
			int a = 10;
		}

		// heap: 프로그래머가 관리 (프로그래머가 필요할 때 필요한 만큼 사용하고 반납하는 메모리 => 효율적이다)
		// heap에 만들어지는 놈은 이름을 가질 수 없다. -> 자바에서 객체는 힙에 만들어진다(객체 영역) = 객체는 이름을 못 가진다
		// => 이름이 없기 때문에 사용불가능(프로그래밍 불가능)
		// => 그래서 stack영역에 리모콘을 만들어서 heap에 있는 객체를 간접 조작한다.

		// cf) Window -> Preferences -> General -> Show heap Status 하면 메모리 정리버튼
		// 나옴(메모리회수)
		// 동적인 영역
		// 객체가 만들어진다.

		//////////////////////////////////////////////////////////////////
		// stcak => 기본타입, 참조타입
		// heap => 객체
		String s1 = "Hello";

		// .연사자로 접근하는 메소드는 객체가 가지고 있다.
		// 다만 접근할때는 참조변수 이름으로 접근
		System.out.println(s1.length());
		System.out.println(s1.hashCode());

		// 반납
		s1 = "우리나라 좋은나라";
		System.out.println(s1.hashCode()); // hashCode가 바뀜
		// "Hello"는 이제 참조변수가 없다
		// 그러면 자바의 메모리 청소 대상 -> 메모리 회수(메모리가 모자랄 때만)

//		///////////////////////////////////////////////////////////////
		// 자바에서 기본타입, 참조타입 변수는 스택에 생성
		// 자바에서 객체는 new를 이용해서 heap에 생성 -> heap에 있는 변수는 이름을 못 가짐 = > 객체는 이름이 없다.
		// => stack에 4바이트 참조변수를 만들어서 가리키게 한다
		Date d = new Date();
	}
}
